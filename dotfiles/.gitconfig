[user]
	name = Matus Kmit
	email = matus.kmit@zhdk.ch
        signingkey = A7D4C7D0AA8CF012

[guitool "Rebase onto..."]
        cmd = git rebase
        revprompt = yes
[guitool "Rebase/Continue"]
        cmd = git rebase --continue
[guitool "Rebase/Skip"]
        cmd = git rebase --skip
[guitool "Rebase/Abort"]
        cmd = git rebase --abort
[guitool "Pull with Rebase"]
        cmd = git pull --rebase

[guitool "Stash/Push"]
        cmd = git stash
[guitool "Stash/Pop"]
        cmd = git stash pop
[guitool "Stash/List"]
        cmd = git stash list

[gui]
        fontui = -family \"DejaVu Sans Mono\" -size 10 -weight normal -slant roman -underline 0 -overstrike 0
        fontdiff = -family \"DejaVu Sans Mono\" -size 10 -weight normal -slant roman -underline 0 -overstrike 0
        recentrepo = /home/nimaai/src/leihs

[alias]
        c = commit
[alias]
        cm = commit -m
[alias]
        ca = commit --amend
[alias]
        can = commit --amend --no-edit
[alias]
        cf = "!f() { git commit --fixup=$1; }; f"
[alias]
        cp = cherry-pick
[alias]
        cpn = cherry-pick --no-commit
[alias]
        cpa = cherry-pick --abort
[alias]
        cpc = cherry-pick --continue
[alias]
        patch = "!f() { git add . && git can && git psf; }; f"
[alias]
        rmu = "!f() { git status --porcelain | cut -f 2- -d \" \" | xargs rmtrash; }; f"
[alias]
        s = status --ignore-submodules=untracked
[alias]
        sa = status
[alias]
        sw = switch
[alias]
        swd = switch -d
[alias]
        swc = switch -C
[alias]
        swr = switch --recurse-submodules
[alias]
        rt = restore
[alias]
        a = add
; [alias]
;         co = checkout
; [alias]
;         cos = "!f() { git checkout $1 && git submodule update --init --recursive; }; f"
[alias]
        cp = cherry-pick
[alias]
        b = branch
[alias]
        pl = pull
[alias]
        plr = pull --rebase
[alias]
        ps = push
[alias]
        psf = push --force-with-lease
[alias]
        psom = push origin HEAD:master
[alias]
        pso = "!f() { git push origin HEAD:refs/heads/$1; }; f"
[alias]
        psfo = "!f() { git push --force origin HEAD:$1; }; f"
[alias]
        dno = diff --name-only
[alias]
        d = diff --submodule
[alias]
        ds = diff --staged --submodule
[alias]
        dt = difftool
[alias]
        dom = diff origin/master
[alias]
        l = log
[alias]
        lp = log --graph --decorate --pretty=oneline --abbrev-commit -10
[alias]
        lpfp = log --graph --decorate --pretty=oneline --abbrev-commit --first-parent -10
[alias]
        last = log --graph --decorate --pretty=oneline --abbrev-commit -1
[alias]
        lol = log --graph --decorate --pretty=oneline --abbrev-commit
[alias]
        lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
[alias]
        m = merge
[alias]
        ma = merge --abort
[alias]
        ms = merge --squash
[alias]
        mbom = merge-base HEAD origin/master
[alias]
        r = rebase
[alias]
        rc = rebase --continue
[alias]
        ra = rebase --abort
[alias]
        rs = rebase --skip
[alias]
        ri = rebase --interactive
[alias]
        rom = rebase origin/master
[alias]
        riom = rebase --interactive origin/master
[alias]
        ria = rebase --interactive --autosquash
[alias]
        riaom = rebase --interactive --autosquash origin/master
[alias]
        rh = reset --hard
[alias]
        rhom = reset --hard origin/master
[alias]
        rmbom = "!f() { git reset $(git merge-base HEAD origin/master); }; f"
[alias]
        rhmbom = "!f() { git reset --hard $(git merge-base HEAD origin/master); }; f"
[alias]
        rsuo = remote set-url origin
[alias]
        suball = submodule foreach git pull -q origin master
[alias]
        suball = submodule foreach git pull -q origin master
[alias]
        su = submodule update
[alias]
        sur = submodule update --recursive
[alias]
        suf = submodule update --force
[alias]
        surf = submodule update --recursive --force
[alias]
        surfi = submodule update --recursive --force --init
[alias]
        uiau = update-index --assume-unchanged
[alias]
        uinau = update-index --assume-unchanged
; [alias]
;         ss = stash save
[alias]
        ssm = "!f() { git submodule summary | colorss; }; f"
[alias]
        ss = submodule status
[alias]
        ssr = submodule status --recursive
[alias]
        sp = stash pop
[alias]
        sd = stash drop
[alias]
        sl = stash list
[alias]
        f = fetch
[alias]
        fr = fetch --recurse-submodules
[alias]
        rp = rev-parse
[alias]
        rp = rev-parse
[alias]
        bc = "!f() { hub browse -- commits/$(git rev-parse $1); }; f"
[alias]
        ci = "!f() { hub ci-status; }; f"

[color]
        branch = auto
        diff = auto
        status = auto

[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green

[color "diff"]
        meta = bold
        frag = magenta bold
        old = red
        new = green

[color "status"]
        added = yellow
        changed = green
        untracked = cyan

; [diff]
;         tool = nvim -d
[difftool]
        prompt = false
[difftool "vimdiff"]
        cmd = nvim -d $LOCAL $REMOTE
; [merge]
;         tool = nvim -d
[mergetool]
        prompt = false
[mergetool "vimdiff"]
        cmd = nvim -d $BASE $LOCAL $REMOTE
[core]
        editor = nvim
	excludesfile = /Users/nitaai/.gitignore
[push]
        default = current
;         recurseSubmodules = on-demand
; [branch]
;         autosetuprebase = always
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[commit]
        gpgsign = true
	template = /Users/nitaai/.stCommitMsg
[gpg]
	program = /usr/local/bin/gpg
; [status]
; 	submodulesummary = true
[mergetool "fugitive"]
	; cmd = vim -f -c \"Gdiff\" \"$MERGED\"
        cmd = nvim -d $BASE $LOCAL $REMOTE
[remote "origin"]
	prune = true
[pull]
	rebase = true
